{"version":3,"file":"static/js/756.94c7b3a5.chunk.js","mappings":"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","sources":["components/Forms/Forms.styled.js","redux/contacts/selectors.js","components/Forms/ContactForm.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const FormStyled = styled.form`\n  border: 1px solid;\n  display: flex;\n  flex-direction: column;\n  width: 260px;\n  padding: 15px;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 15px;\n  margin: 0 auto;\n  color: white;\n`;\nexport const InputStyled = styled.input`\n  width: fit-content;\n  margin-bottom: 24px;\n  background: rgba(255, 255, 255, 0.5);\n  &:hover,\n  :focus {\n    background: rgba(0, 0, 0, 0.5);\n    color: white;\n  }\n`;\n\nexport const Submit = styled.button`\n  &:hover {\n    background: rgba(0, 0, 0, 0.5);\n    color: white;\n  }\n`;\n","export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectValueFilter = state => state.filters.value;","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { FormStyled, InputStyled } from './Forms.styled';\n\nexport function ContactForm() {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    if (\n      contacts.find(\n        item =>\n          item.name.toLowerCase() === form.elements.name.value.toLowerCase()\n      )\n    ) {\n      alert(\n        `A contact with the name ${form.elements.name.value} already exists.`\n      );\n      return;\n    }\n    dispatch(\n      addContact({\n        name: form.elements.name.value,\n        number: form.elements.phone.value,\n      })\n    );\n\n    form.reset();\n  };\n\n  return (\n    <FormStyled onSubmit={handleSubmit}>\n      <label>\n        Name\n        <br />\n        <InputStyled\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <br />\n        <InputStyled\n          type=\"tel\"\n          name=\"phone\"\n          autoComplete=\"off\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <InputStyled type=\"submit\" value=\"Add contact\" />\n    </FormStyled>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  font-size: inherit;\n  line-height: 150%;\n  display: flex;\n  font-size: 18px;\n  justify-content: space-between;\n  padding-bottom: 8px;\n`;\n\nexport const Item = styled.div``;\n\nexport const DeleteContact = styled.button`\n  font-size: 16px;\n  cursor: pointer;\n  outline: none;\n  border: none;\n  background-color: rgba(255, 255, 255, 0.4);\n  border-radius: 10px;\n\n  &:hover,\n  :focus {\n    background-color: rgba(0, 0, 0, 0.5);\n    color: white;\n    outline: none;\n    border: none;\n  }\n  &.active {\n    color: red;\n    background-color: rgba(255, 255, 255, 1);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\n\nimport { ContactItem, Item, DeleteContact } from './Contact.styled';\n\nexport function Contact({ contact }) {\n  const { id, name, number } = contact;\n  const dispatch = useDispatch();\n\n  return (\n    <ContactItem key={id}>\n      <Item>\n        {name}\n        {': '}\n        {number}\n      </Item>\n      <DeleteContact type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete contact\n      </DeleteContact>\n    </ContactItem>\n  );\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Wraper = styled.div`\n  background: rgba(0, 0, 0, 0.5);\n`;\n\nexport const ListContact = styled.ul`\n  padding: 20px;\n  color: white;\n  margin: 0 auto;\n  width: 500px;\n  @media (max-width: 600px) {\n    & {\n      width: 300px;\n    }\n  }\n`;\n","import { Contact } from 'components/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { selectValueFilter, selectContacts } from 'redux/contacts/selectors';\nimport { ListContact, Wraper } from './ContactList.styled';\n\nexport function ContactList() {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectValueFilter);\n\n  const filterContact = () => {\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  let arr = filterContact();\n  if (!filterContact) {\n    arr = contacts;\n  }\n\n  return (\n    <Wraper>\n      <ListContact>\n        {arr.map(item => (\n          <Contact key={item.id} contact={item} />\n        ))}\n      </ListContact>\n    </Wraper>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 1em;\n  display: flex;\n  flex-direction: column;\n  color: white;\n  background: rgba(0, 0, 0, 0.5);\n  align-items: center;\n  padding: 10px 0;\n`;\n\nexport const FilterInput = styled.input`\n  width: fit-content;\n  background: rgba(255, 255, 255, 0.5);\n\n  &:hover,\n  :focus {\n    background: rgba(0, 0, 0, 0.5);\n    color: white;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { setValueFilter } from '../../redux/contacts/filtersSlice';\nimport { Container, FilterInput } from './Filter.styled';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const handleChange = event => {\n    dispatch(setValueFilter(event.target.value));\n  };\n\n  return (\n    <Container>\n      <label>\n        Find contacts by name\n        <br />\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          autoComplete=\"off\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n    </Container>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { selectContacts, selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactForm } from 'components/Forms/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Loader } from 'components/Loader/Loader';\nexport default function Contacts() {\n  const dispath = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n  useEffect(() => {\n    dispath(fetchContacts());\n  }, [dispath]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      {isLoading && <Loader />}\n      {contacts.length > 0 && (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["FormStyled","styled","InputStyled","Submit","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectValueFilter","filters","value","ContactForm","useSelector","dispatch","useDispatch","onSubmit","event","preventDefault","form","target","find","item","name","toLowerCase","elements","alert","addContact","number","phone","reset","type","autoComplete","pattern","title","required","ContactItem","Item","DeleteContact","Contact","contact","id","onClick","deleteContact","Wraper","ListContact","ContactList","filter","filterContact","includes","arr","map","Container","FilterInput","Filter","onChange","setValueFilter","Contacts","dispath","useEffect","fetchContacts","Helmet","Loader","length"],"sourceRoot":""}