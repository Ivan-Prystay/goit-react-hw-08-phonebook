{"version":3,"file":"static/js/900.39eaa4af.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Contact/Contact.styled.js","components/Contact/Contact.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectValueFilter = state => state.filters.value;","import styled from 'styled-components';\n\nexport const FormContact = styled.form`\n  border: 1px solid;\n  display: flex;\n  flex-direction: column;\n  width: 320px;\n  padding: 15px;\n  background: rgba(0, 0, 0, 0.5);\n  border-radius: 15px;\n  margin: 0 auto;\n  color: white;\n`;\nexport const NameInput = styled.input`\n  width: fit-content;\n  margin-bottom: 24px;\n`;\nexport const TelInput = styled.input`\n  width: fit-content;\n  margin-bottom: 24px;\n`;\nexport const AddContact = styled.input`\n  width: fit-content;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nimport {\n  FormContact,\n  AddContact,\n  NameInput,\n  TelInput,\n} from './ContactForm.styled';\n\nexport function ContactForm() {\n  const contacts = useSelector(selectContacts);\n\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    if (\n      contacts.find(\n        item =>\n          item.name.toLowerCase() === form.elements.name.value.toLowerCase()\n      )\n    ) {\n      alert(\n        `A contact with the name ${form.elements.name.value} already exists.`\n      );\n      return;\n    }\n    dispatch(\n      addContact({\n        name: form.elements.name.value,\n        number: form.elements.phone.value,\n      })\n    );\n\n    form.reset();\n  };\n\n  NameInput.id = nanoid();\n  TelInput.id = nanoid();\n  return (\n    <FormContact onSubmit={handleSubmit}>\n      <label htmlFor={NameInput.id}>Name</label>\n      <NameInput\n        type=\"text\"\n        name=\"name\"\n        autoComplete=\"off\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        id={NameInput.id}\n      />\n      <label htmlFor={TelInput.id}>Number</label>\n      <TelInput\n        type=\"tel\"\n        name=\"phone\"\n        autoComplete=\"off\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        id={TelInput.id}\n      />\n      <AddContact type=\"submit\" value=\"Add contact\" />\n    </FormContact>\n  );\n}\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  font-size: inherit;\n  line-height: 150%;\n`;\n\nexport const DeleteContact = styled.button`\n  margin-left: 20px;\n  cursor: pointer;\n  outline: none;\n  border: none;\n  background-color: #e2e2e2f1;\n\n  &:active,\n  &:hover {\n    background-color: #467bcad2;\n    color: white;\n    outline: none;\n    border: none;\n  }\n  &:active {\n    color: red;\n    background-color: #e2e2e2f1;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport { useDispatch } from 'react-redux';\n\nimport { ContactItem, DeleteContact } from './Contact.styled';\n\nexport function Contact({ contact }) {\n  const { id, name, number } = contact;\n  const dispatch = useDispatch();\n\n  return (\n    <ContactItem key={id}>\n      {name}\n      {': '}\n      {number}\n      <DeleteContact type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete contact\n      </DeleteContact>\n    </ContactItem>\n  );\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const ListContact = styled.ol`\n  font-size: inherit;\n`;\n","import { Contact } from 'components/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { selectValueFilter, selectContacts } from 'redux/contacts/selectors';\nimport { ListContact } from './ContactList.styled';\n\nexport function ContactList() {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectValueFilter);\n\n  const filterContact = () => {\n    return contacts.filter(item =>\n      item.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  let arr = filterContact();\n  if (!filterContact) {\n    arr = contacts;\n  }\n\n  return (\n    <ListContact>\n      {arr.map(item => (\n        <Contact key={item.id} contact={item} />\n      ))}\n    </ListContact>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const FilterInput = styled.input`\n  width: fit-content;\n`;\n","import { useDispatch } from 'react-redux';\nimport { setValueFilter } from '../../redux/contacts/filtersSlice';\nimport { Container, FilterInput } from './Filter.styled';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const handleChange = event => {\n    dispatch(setValueFilter(event.target.value));\n  };\n\n  return (\n    <Container>\n      <label>\n        Find contacts by name\n        <br />\n        <FilterInput\n          type=\"text\"\n          name=\"filter\"\n          autoComplete=\"off\"\n          required\n          onChange={handleChange}\n        />\n      </label>\n    </Container>\n  );\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\n\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function Contacts() {\n  const dispath = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispath(fetchContacts());\n  }, [dispath]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'} </div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectValueFilter","filters","value","FormContact","styled","NameInput","TelInput","AddContact","ContactForm","useSelector","dispatch","useDispatch","id","nanoid","onSubmit","event","preventDefault","form","target","find","item","name","toLowerCase","elements","alert","addContact","number","phone","reset","htmlFor","type","autoComplete","pattern","title","required","ContactItem","DeleteContact","Contact","contact","onClick","deleteContact","ListContact","ContactList","filter","filterContact","includes","arr","map","Container","FilterInput","Filter","onChange","setValueFilter","Contacts","dispath","useEffect","fetchContacts","Helmet"],"sourceRoot":""}